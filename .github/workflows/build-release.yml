name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            name: macos-x86_64
            binary_name: hashsafe
          - os: macos-latest
            target: aarch64-apple-darwin
            name: macos-aarch64
            binary_name: hashsafe

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      
      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
        env:
          CARGO_BUILD_TARGET: ${{ matrix.target }}
      
      - name: Package as archive
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          tar czvf ../../../hashsafe-${{ matrix.name }}.tar.gz ${{ matrix.binary_name }}
          cd -
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: hashsafe-${{ matrix.name }}
          path: hashsafe-${{ matrix.name }}.tar.gz
          if-no-files-found: ignore

  release:
    name: Release
    needs: build
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      
      - name: Create a new GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: hashsafe-*/hashsafe-*.tar.gz
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  macos-universal:
    name: Build macOS Universal Binary
    runs-on: macos-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-apple-darwin
          override: true
      
      - name: Add aarch64 target
        run: rustup target add aarch64-apple-darwin
      
      - name: Build x86_64
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target x86_64-apple-darwin
      
      - name: Build aarch64
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target aarch64-apple-darwin
      
      - name: Create Universal Binary
        run: |
          mkdir -p target/universal-apple-darwin/release
          lipo -create -output target/universal-apple-darwin/release/hashsafe \
            target/x86_64-apple-darwin/release/hashsafe \
            target/aarch64-apple-darwin/release/hashsafe
      
      - name: Package as archive
        shell: bash
        run: |
          cd target/universal-apple-darwin/release
          tar czvf ../../../hashsafe-macos-universal.tar.gz hashsafe
          cd -
      
      - name: Upload universal binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: hashsafe-macos-universal
          path: hashsafe-macos-universal.tar.gz
      
      - name: Upload to release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: hashsafe-macos-universal.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
